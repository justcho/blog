import{_ as a,o as t,c as e,U as r}from"./chunks/framework.316ef557.js";const i="/blog/assets/JS.1a351b8b.png",f=JSON.parse('{"title":"JavaScript","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"notes/javascript/JS.md","filePath":"notes/javascript/JS.md","lastUpdated":1688978487000}'),l={name:"notes/javascript/JS.md"},o=r('<h1 id="javascript" tabindex="-1">JavaScript <a class="header-anchor" href="#javascript" aria-label="Permalink to &quot;JavaScript&quot;">​</a></h1><p><img src="'+i+'" alt="JavaScript的诞生"></p><h2 id="javascript的历史" tabindex="-1">JavaScript的历史 <a class="header-anchor" href="#javascript的历史" aria-label="Permalink to &quot;JavaScript的历史&quot;">​</a></h2><h3 id="网景" tabindex="-1">网景 <a class="header-anchor" href="#网景" aria-label="Permalink to &quot;网景&quot;">​</a></h3><ul><li>1993年出现网页浏览器NCSA Mosaic</li><li>1994年出现Netscape Navigator，并占据四分之三浏览器市场</li><li>1995年5月布兰登根据公司的要求发明一种跟java语法类似的语言，十天时间就把原型设计出来</li><li>最初命名为Mocha，1995年9月改名为LiveScript，12月，重命名为JavaScript</li></ul><h3 id="微软" tabindex="-1">微软 <a class="header-anchor" href="#微软" aria-label="Permalink to &quot;微软&quot;">​</a></h3><ul><li>1996年8月推出JScript</li></ul><h3 id="标准化" tabindex="-1">标准化 <a class="header-anchor" href="#标准化" aria-label="Permalink to &quot;标准化&quot;">​</a></h3><ul><li>1996年11月网景正式向ECMA提交语言标准</li><li>1997年6月，ECMA以JavaScript语言为基础制定了ECMAScript标准规范ECMA-262</li></ul><h2 id="javascript由来" tabindex="-1">JavaScript由来 <a class="header-anchor" href="#javascript由来" aria-label="Permalink to &quot;JavaScript由来&quot;">​</a></h2><h3 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h3><ul><li>网景公司急需一种网页脚本语言，使得浏览器可以与网页互动</li><li>1995年5月，网景公司做出决策，未来的网页脚本语言必须&quot;看上去与Java足够相似&quot;，但是比Java简单，使得非专业的网页作者也能很快上手</li></ul><h3 id="设计思路" tabindex="-1">设计思路 <a class="header-anchor" href="#设计思路" aria-label="Permalink to &quot;设计思路&quot;">​</a></h3><blockquote><p>Javascript语言实际上是两种语言风格的混合产物----（简化的）函数式编程+（简化的）面向对象编程</p></blockquote><h3 id="布兰登评价" tabindex="-1">布兰登评价 <a class="header-anchor" href="#布兰登评价" aria-label="Permalink to &quot;布兰登评价&quot;">​</a></h3><blockquote><p>&quot;与其说我爱JavaScript，不如说我恨它。它是C语言和Self语言一晚上的产物。十八世纪英国文学家约翰逊博士说得好：&#39;它的优秀之处并非原创，它的原创之处并不优秀。&#39;</p></blockquote><h2 id="javascript的设计缺陷" tabindex="-1">JavaScript的设计缺陷 <a class="header-anchor" href="#javascript的设计缺陷" aria-label="Permalink to &quot;JavaScript的设计缺陷&quot;">​</a></h2><h3 id="不适合开发大型程序" tabindex="-1">不适合开发大型程序 <a class="header-anchor" href="#不适合开发大型程序" aria-label="Permalink to &quot;不适合开发大型程序&quot;">​</a></h3><h3 id="非常小的标准库" tabindex="-1">非常小的标准库 <a class="header-anchor" href="#非常小的标准库" aria-label="Permalink to &quot;非常小的标准库&quot;">​</a></h3><h3 id="null和undefined" tabindex="-1">null和undefined <a class="header-anchor" href="#null和undefined" aria-label="Permalink to &quot;null和undefined&quot;">​</a></h3><blockquote><p>在编程实践中，null几乎没用，根本不应该设计它。</p></blockquote><h3 id="全局变量难以控制" tabindex="-1">全局变量难以控制 <a class="header-anchor" href="#全局变量难以控制" aria-label="Permalink to &quot;全局变量难以控制&quot;">​</a></h3><h3 id="自动插入行尾分号" tabindex="-1">自动插入行尾分号 <a class="header-anchor" href="#自动插入行尾分号" aria-label="Permalink to &quot;自动插入行尾分号&quot;">​</a></h3><h3 id="加号运算符" tabindex="-1">加号运算符 <a class="header-anchor" href="#加号运算符" aria-label="Permalink to &quot;加号运算符&quot;">​</a></h3><h3 id="nan" tabindex="-1">NaN <a class="header-anchor" href="#nan" aria-label="Permalink to &quot;NaN&quot;">​</a></h3><h3 id="数组和对象的区分" tabindex="-1">数组和对象的区分 <a class="header-anchor" href="#数组和对象的区分" aria-label="Permalink to &quot;数组和对象的区分&quot;">​</a></h3><h3 id="和" tabindex="-1">== 和 === <a class="header-anchor" href="#和" aria-label="Permalink to &quot;== 和 ===&quot;">​</a></h3><blockquote><p>推荐任何时候都使用&quot;===&quot;（精确判断）比较符</p></blockquote><h3 id="基本类型的包装对象" tabindex="-1">基本类型的包装对象 <a class="header-anchor" href="#基本类型的包装对象" aria-label="Permalink to &quot;基本类型的包装对象&quot;">​</a></h3><h2 id="链接" tabindex="-1">链接 <a class="header-anchor" href="#链接" aria-label="Permalink to &quot;链接&quot;">​</a></h2><h3 id="javascript诞生记" tabindex="-1"><a href="http://www.ruanyifeng.com/blog/2011/06/birth_of_javascript.html" target="_blank">Javascript诞生记</a> <a class="header-anchor" href="#javascript诞生记" aria-label="Permalink to &quot;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/06/birth_of_javascript.html&quot; target=&quot;_blank&quot;&gt;Javascript诞生记&lt;/a&gt;&quot;">​</a></h3><h3 id="javascript的10个设计缺陷" tabindex="-1"><a href="http://www.ruanyifeng.com/blog/2011/06/10_design_defects_in_javascript.html" target="_blank">Javascript的10个设计缺陷</a> <a class="header-anchor" href="#javascript的10个设计缺陷" aria-label="Permalink to &quot;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/06/10_design_defects_in_javascript.html&quot; target=&quot;_blank&quot;&gt;Javascript的10个设计缺陷&lt;/a&gt;&quot;">​</a></h3>',32),h=[o];function c(n,s,d,u,p,b){return t(),e("div",null,h)}const _=a(l,[["render",c]]);export{f as __pageData,_ as default};
