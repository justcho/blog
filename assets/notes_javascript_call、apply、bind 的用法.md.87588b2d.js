import{_ as s,o as a,c as l,U as n}from"./chunks/framework.316ef557.js";const A=JSON.parse('{"title":"call、apply、bind 的用法","description":"","frontmatter":{},"headers":[],"relativePath":"notes/javascript/call、apply、bind 的用法.md","filePath":"notes/javascript/call、apply、bind 的用法.md","lastUpdated":1689776313000}'),o={name:"notes/javascript/call、apply、bind 的用法.md"},p=n('<h1 id="call、apply、bind-的用法" tabindex="-1">call、apply、bind 的用法 <a class="header-anchor" href="#call、apply、bind-的用法" aria-label="Permalink to &quot;call、apply、bind 的用法&quot;">​</a></h1><h2 id="例1" tabindex="-1">例1 <a class="header-anchor" href="#例1" aria-label="Permalink to &quot;例1&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">objAge</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//17</span></span>\n<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">myFun</span><span style="color:#A6ACCD;">()  </span><span style="color:#676E95;font-style:italic;">//小张年龄undefined</span></span></code></pre></div><h2 id="例2" tabindex="-1">例2 <a class="header-anchor" href="#例2" aria-label="Permalink to &quot;例2&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">shows</span><span style="color:#A6ACCD;">()  </span><span style="color:#676E95;font-style:italic;">//盲僧</span></span></code></pre></div><p>比较一下这两者<code>this</code> 的差别，第一个打印里面的<code>this</code> 指向<code>obj</code>，第二个全局声明的<code>shows()</code>函数 <code>this</code> 是<code>window</code> ；</p><h2 id="_1-call-、apply-、bind-都是用来重定义-this-这个对象的" tabindex="-1">1，<code>call()</code>、<code>apply()</code>、<code>bind()</code> 都是用来重定义 <code>this</code> 这个对象的 <a class="header-anchor" href="#_1-call-、apply-、bind-都是用来重定义-this-这个对象的" aria-label="Permalink to &quot;1，`call()`、`apply()`、`bind()` 都是用来重定义 `this` 这个对象的&quot;">​</a></h2><p>如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myFun</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#A6ACCD;">(db)；　　　　</span><span style="color:#676E95;font-style:italic;">//德玛年龄99</span></span>\n<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myFun</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#A6ACCD;">(db)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">　　　 </span><span style="color:#676E95;font-style:italic;">//德玛年龄99</span></span>\n<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myFun</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(db)()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">　　　</span><span style="color:#676E95;font-style:italic;">//德玛年龄99</span></span></code></pre></div><p>以上出了bind 方法后面多了个 () 外 ，结果返回都一致！ 由此得出结论，bind 返回的是一个新的函数，你必须调用它才会被执行</p><h2 id="_2-对比call-、bind-、-apply-传参情况下" tabindex="-1">2，对比<code>call</code> 、<code>bind</code> 、 <code>apply</code> 传参情况下 <a class="header-anchor" href="#_2-对比call-、bind-、-apply-传参情况下" aria-label="Permalink to &quot;2，对比`call` 、`bind` 、 `apply` 传参情况下&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myFun</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#A6ACCD;">(db</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">成都</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">上海</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)；　　　　 </span><span style="color:#676E95;font-style:italic;">//德玛 年龄 99  来自 成都去往上海</span></span>\n<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myFun</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#A6ACCD;">(db</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">成都</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">上海</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">//德玛 年龄 99  来自 成都去往上海</span></span>\n<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myFun</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(db</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">成都</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">上海</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;">//德玛 年龄 99  来自 成都去往上海</span></span>\n<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myFun</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(db</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">成都</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">上海</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">])()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">　　 </span><span style="color:#676E95;font-style:italic;">//德玛 年龄 99  来自 成都,上海去往undefined</span></span></code></pre></div><h2 id="_3-微妙的差距" tabindex="-1">3，微妙的差距 <a class="header-anchor" href="#_3-微妙的差距" aria-label="Permalink to &quot;3，微妙的差距&quot;">​</a></h2><p>从上面四个结果不难看出 call 、bind 、 apply 这三个函数的第一个参数都是 this 的指向对象，第二个参数差别就来了： call的参数是直接放进去的，第二第三第n个参数全都用逗号分隔，直接放到后面 <code>obj.myFun.call(db,&#39;成都&#39;, ... ,&#39;string&#39; )</code>； apply的所有参数都必须放在一个数组里面传进去 <code>obj.myFun.apply(db,[&#39;成都&#39;, ..., &#39;string&#39; ])</code>; bind除了返回是函数以外，它 的参数和call 一样。 当然，三者的参数不限定是string类型，允许是各种类型，包括函数 、 object 等等</p><h2 id="_4-mdn" tabindex="-1">4，<code>MDN</code> <a class="header-anchor" href="#_4-mdn" aria-label="Permalink to &quot;4，`MDN`&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call" target="_blank" rel="noreferrer">Function.prototype.call()</a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply" target="_blank" rel="noreferrer">Function.prototype.apply()</a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind" target="_blank" rel="noreferrer">Function.prototype.bind()</a></p>',16),e=[p];function t(c,r,y,i,D,d){return a(),l("div",null,e)}const C=s(o,[["render",t]]);export{A as __pageData,C as default};
